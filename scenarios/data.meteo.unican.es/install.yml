- name: Install tomcats
  hosts: servers
  vars:
    jdk_tgz: ../../software/jdk8.tar.gz
    tomcat_tgz: ../../software/apache-tomcat-8.0.42.tar.gz
    tds_war: ../../software/tds-5.0.0-beta6.war
    derby_tgz: ../../software/db-derby-10.14.2.0-lib.tar.gz
    jrobin_jar: ../../software/jrobin-1.5.9.jar
    melody_jar: ../../software/javamelody-core-1.73.1.jar
    tomcat_ssl_keystoreFile: "{{ tomcat_home }}/server.p12"
    tomcat_ssl_keystorePass: coches1
    tds_context: tds5
  vars_files:
    - secrets.yml
  tasks:
    - name: Create {{ tomcat_home }} directory
      file: state=directory path={{ tomcat_home }}

    - name: Create directory for jdk
      file: state=directory path={{ jdk_home }}

    - name: Unarchive jdk in {{ tomcat_home }}
      unarchive: >
        src={{ jdk_tgz }} dest={{ jdk_home }}
        extra_opts="--strip-components=1"

    - name: Unarchive tomcat in {{ tomcat_home }}
      unarchive: >
        src={{ tomcat_tgz }} dest={{ tomcat_home }}
        extra_opts="--strip-components=1"

    - name: Copy keystore
      copy: src=../../server.p12 dest={{ tomcat_ssl_keystoreFile }}

    - name: Unarchive derbydb client
      unarchive:
        src: "{{ derby_tgz }}"
        dest: "{{ tomcat_home }}/lib"
        exclude:
          - derby.war
          - README.htm
        extra_opts:
          - --strip-components=2

# Tomcats
    - name: Deploy catalina bases
      include_role:
        name: tomcat
      with_items: "{{ tomcats }}"
      loop_control:
        loop_var: tomcat

    - name: Template setenv.sh
      template: src=templates/setenv.sh.j2 dest={{ tomcat_bases }}/{{ item.name }}/bin/setenv.sh
      with_items: "{{ tomcats }}"

    - name: Template server.xml
      template: src=templates/server.xml.j2 dest={{ tomcat_bases }}/{{ item.name }}/conf/server.xml
      with_items: "{{ tomcats }}"

# TDS
    - name: Deploy TDSs
      include_role:
        name: tds
      vars:
        tds_home: "{{ tomcat_bases }}/{{ item.name }}/webapps/{{ tds_context }}"
        tds_sslPort: "{{ item.ssl }}"
      with_items: "{{ tomcats }}"

# Melody
    - name: Install jrobin
      copy: src={{ jrobin_jar }} dest={{ tomcat_bases }}/{{ item.name }}/webapps/{{ tds_context }}/WEB-INF/lib/
      with_items: "{{ tomcats }}"

    - name: Install java melody
      copy: src={{ melody_jar }} dest={{ tomcat_bases }}/{{ item.name }}/webapps/{{ tds_context }}/WEB-INF/lib/
      with_items: "{{ tomcats }}"

# TAP
    - name: Create tap directory
      file: state=directory path={{ tomcat_bases }}/{{ item.name }}/webapps/udg-tap
      with_items: "{{ tomcats }}"

    - name: Unarchive tap
      unarchive: src=../../software/udg-tap.war dest={{ tomcat_bases }}/{{ item.name }}/webapps/udg-tap
      with_items: "{{ tomcats }}"

    - name: Template tap properties
      template: >
        src=templates/tap.properties.j2
        dest={{ tomcat_bases }}/{{ item.name }}/webapps/udg-tap/WEB-INF/classes/global_variables.properties
      with_items: "{{ tomcats }}"

    - name: Copy context.xml
      copy: src=files/context.xml dest={{ tomcat_bases }}/{{ item.name }}/conf/context.xml
      with_items: "{{ tomcats }}"

- name: Install load balancer
  hosts: lbs
  vars:
    hostcert: /etc/pki/tls/certs/hostcert.pem
    hostkey: /etc/pki/tls/private/hostkey.pem
    clusters:
      - name: default
        urls: [/tds5, /udg-tap]
  tasks:
    - name: Install httpd
      yum: name=httpd,mod_ssl state=present

    - name: Copy httpd conf
      copy: src=files/httpd.conf dest=/etc/httpd/conf/httpd.conf

    - name: Template ssl conf
      template: src=templates/httpd.ssl.conf.j2 dest=/etc/httpd/conf/httpd.ssl.conf

    - name: Template modproxy.conf
      template: src=templates/modproxy.conf.j2 dest=/etc/httpd/conf.d/modproxy.conf

    - name: Copy httpd certificate
      copy: src=../../server.pem dest={{ hostcert }}

    - name: Copy httpd private key
      copy: src=../../insecure_private_key dest={{ hostkey }}

- name: Install default workers
  hosts: servers
  serial: True
  vars:
    workers:
    - gateway: spock
      cluster: default
      properties: loadfactor=1 route={{ ansible_hostname }}
  tasks:
    - name: Add tomcat as a modproxy worker
      blockinfile:
        path: /etc/httpd/conf.d/modproxy.conf
        insertafter: <Proxy "balancer://{{ item.cluster }}">
        marker: "# {mark} {{ item.cluster }}://{{ ansible_all_ipv4_addresses[0] }}:8009"
        block: |
          BalancerMember "ajp://{{ ansible_all_ipv4_addresses[0] }}:8009" {{ item.properties }}
      delegate_to: "{{ item.gateway }}"
      with_items: "{{ workers }}"

- name: Install derbydb
  hosts: databases
  vars:
    derby_tgz: db-derby-10.14.2.0-bin.tar.gz
  tasks:
    - name: Create {{ derby_home }} directory
      file: state=directory path={{ derby_home }}

    - name: Unarchive derbydb
      unarchive: >
        src=../../software/{{ derby_tgz }}
        dest={{ derby_home }}
        extra_opts=--strip-components=1

    - name: Template derby.properties
      template: src=templates/derby.properties.j2 dest={{ derby_home }}/derby.properties