- name: Install ESGF tomcat
  hosts: servers
  vars:
    esghome: "{{ root }}/{{ inventory_hostname }}/esgf"
  vars_files:
    - secrets.yml
  roles:
    - role: esgftomcat
      tomcat: "{{ tomcats.esgf }}"
  tasks:
    - name: Copy truststore
      copy: src={{ certs }}/esg-truststore.ts dest={{ tomcats.esgf.truststore }} mode=644
    
    - name: Copy keystore
      copy: src={{ certs }}/esg-keystore.ts dest={{ tomcats.esgf.keystore }} mode=600

    - name: Create content/thredds
      file: state=directory dest={{ esg.content }}/thredds

    - name: Copy UDG threddsConfig.xml
      copy: src=files/threddsConfig.xml dest={{ esg.content }}/thredds/threddsConfig.xml

    - name: Clone tds-content
      run_once: True
      local_action:
        module: git
        repo: git@gitlab.com:SCDS/tds-content.git
        dest: esgf-content
        version: esgf
        depth: 1

    - name: Synchronize esgf-content
      synchronize: src=esgf-content/ dest={{ esg.content }}/thredds

- name: Install derbydb server
  hosts: databases
  vars:
    derby_tgz: db-derby-10.14.2.0-bin.tar.gz
  tasks:
    - name: Create {{ derby_home }} directory
      file: state=directory path={{ derby_home }}

    - name: Unarchive derbydb
      unarchive:
        src: ../../software/{{ derby_tgz }}
        dest: "{{ derby_home }}"
        extra_opts: --strip-components=1

    - name: Template derby.properties
      template: src=templates/derby.properties.j2 dest={{ derby_home }}/derby.properties

- name: Install UDGs
  hosts: servers
  vars_files:
    - secrets.yml
  roles:
    - role: udg
      tomcat: "{{ tomcats.udg }}"
    - role: udg
      tomcat: "{{ tomcats.tds5 }}"
  tasks:
    - name: Create directory for jdk
      file: state=directory path={{ jdk_home }}
    
    - name: Unarchive jdk in {{ jdk_home }}
      unarchive:
        src: "{{ jdk_tgz }}"
        dest: "{{ jdk_home }}"
        extra_opts: --strip-components=1

    - name: Synchronize udg tds-content
      synchronize: src=tds-content/ dest={{ tomcats.udg.home }}/content/thredds

    - name: Clone tds5-content
      run_once: True
      local_action:
        module: git
        repo: git@gitlab.com:SCDS/tds-content.git
        dest: tds5-content
        version: tds5
        depth: 1

    - name: Synchronize udg tds-content
      synchronize: src=tds5-content/ dest={{ tomcats.tds5.home }}/content/thredds

    - name: Remove TAP application
      file: state=absent dest={{ tomcats.tds5.home }}/webapps/udg-tap

    - name: Remove tds5 if exists
      file: state=absent dest={{ tomcats.tds5.home }}/webapps/tds5

    - name: Use /tds5 context
      command: mv -f {{ tomcats.tds5.home }}/webapps/thredds {{ tomcats.tds5.home }}/webapps/tds5

    - name: Copy grib table
      copy: src=files/tds5/2.98.128.table dest={{ tomcats.tds5.home }}/content/thredds/2.98.128.table

    - name: Add grib table to threddsConfig.xml
      blockinfile:
        path: "{{ tomcats.tds5.home }}/content/thredds/threddsConfig.xml"
        insertbefore: '</threddsConfig>'
        block: |
          <nj22Config>
            <gribParameterTable edition="1" center="98" subcenter="-1" version="128">{{ tomcats.tds5.home }}/content/thredds/2.98.128.table</gribParameterTable>
          </nj22Config>

#- name: Install TDS for ATLAS
#  hosts: wn025
#  vars:
#    tomcat: "{{ atlas }}"
#  vars_files:
#    - secrets.yml
#  roles:
#    - role: udg
#  tasks:
#    - name: Remove TAP application
#      file: state=absent dest={{ tomcat.home }}/webapps/udg-tap
