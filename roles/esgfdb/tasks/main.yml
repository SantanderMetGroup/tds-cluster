# publisher
- name: Run esgsetup for the database
  shell: >
    {{ conda.actv }} esgf-pub && \
    esgsetup --db --minimal-setup \
    --db-name '{{ db.name }}' \
    --db-admin '{{ db.admin.name|quote }}' \
    --db-admin-password '{{ db.admin.pass|quote }}' \
    --db-user '{{ db.user.name|quote }}' \
    --db-user-password '{{ db.user.pass|quote }}' \
    --db-host '{{ db.host|quote }}' \
    --db-port '{{ db.port|quote }}'
  environment:
    UVCDAT_ANONYMOUS_LOG: no
    ESGINI: "{{ esg.esgcet }}/esg.ini"

- name: Run esginitialize
  shell: >
    {{ conda.actv }} esgf-pub && esginitialize -c -i {{ esg.esgcet }}
  environment:
    UVCDAT_ANONYMOUS_LOG: no
    ESGINI: "{{ esg.esgcet }}/esg.ini"

- name: Run esgsetup for thredds
  shell: >
    {{ conda.actv }} esgf-pub && \
    esgsetup --config --minimal-setup \
    --thredds --publish --gateway 'esgf-node.ipsl.upmc.fr' \
    --thredds-password '{{ admin_pass }}' \
    --thredds-root '{{ esg.content }}'
  environment:
    UVCDAT_ANONYMOUS_LOG: no
    ESGINI: "{{ esg.esgcet }}/esg.ini"

# schema_migrate
- name: Copy schema migration script
  copy: src=files/esgf_security-0.1.7-py2.7.egg dest={{ esg.home }}/esgf_security-0.1.7-py2.7.egg

- name: Create schema_migrate conda env
  command: "{{ conda.exe }} create -y -n schema_migrate 'python<3' pip sqlparse==0.3.0 decorator sqlalchemy sqlalchemy-utils"
  args:
    creates: "{{ conda.home }}/envs/schema_migrate"

- name: Easy Install schema migration script
  shell: "{{ conda.actv }} schema_migrate && easy_install {{ esg.home }}/esgf_security-0.1.7-py2.7.egg"
  args:
    creates: "{{ conda.home }}/envs/schema_migrate/lib/python2.7/site-packages//esgf_security-0.1.7-py2.7.egg"

- name: Run schema migration script
  shell: '{{ conda.actv }} schema_migrate && esgf_security_initialize --dburl "{{ db.admin.name }}:{{ admin_pass }}@{{ db.host }}:{{ db.port }}/{{ db.name }}" -c'
