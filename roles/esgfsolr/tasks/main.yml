- name: Create downloads directory
  run_once: True
  local_action:
    module: file
    state: directory
    dest: ./downloads

- name: Create directories
  file: state=directory dest={{ item }}
  with_items:
    - "{{ solr.home }}"

- name: Solr downloads
  run_once: True
  local_action:
    module: get_url
    url: "{{ item.url }}"
    dest: ./downloads/{{ item.dest }}
  with_items:
    - { "url": "{{ solr.src }}", "dest": "{{ solr.src|basename }}" }
    - { "url": "{{ assets.base }}/solr-home.tar", "dest": "solr-home.tar" }

- name: Install solr
  unarchive:
    src: ./downloads/{{ solr.src|basename }}
    dest: "{{ solr.path|dirname }}"

- name: Create shards
  file:
    path: "{{ solr.home }}/{{ item.name }}-{{ item.port }}"
    state: directory
  with_items: "{{ solr.shards }}"

- name: Copy solr.xml
  copy: src=files/solr.xml dest={{ solr.home }}/{{ item.name }}-{{ item.port }}/solr.xml
  with_items: "{{ solr.shards }}"

# this comes from solr-home.tar
- name: Synchronize solr conf
  synchronize: src=files/conf/ dest={{ solr.home }}/{{ item.name }}-{{ item.port }}/conf
  with_items: "{{ solr.shards }}"

- name: Start solr
  command: "{{ solr.path }}/bin/solr start -s {{ solr.home }}/{{ item.name }}-{{ item.port }} -p {{ item.port }}"
  with_items: "{{ solr.shards }}"

- name: Create cores
  command: "{{ solr.path }}/bin/solr create_core -c {{ item.0 }} -d {{ solr.home }}/{{ item.1.name }}-{{ item.1.port }} -p {{ item.1.port }}"
  args:
    creates: "{{ solr.home }}/{{ item.1.name }}-{{ item.1.port }}/{{ item.0 }}"
  with_nested:
    - ["datasets", "files", "aggregations"]
    - "{{ solr.shards }}"
