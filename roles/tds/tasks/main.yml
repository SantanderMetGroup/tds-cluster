- name: Create directories for tds
  file: state=directory path={{ tomcat_bases }}/{{ tomcat.name }}/webapps/{{ tds_context }}

- name: Unarchive TDS
  unarchive: >
    src={{ tds_war }}
    dest={{ tomcat_bases }}/{{ tomcat.name }}/webapps/{{ tds_context }}

- name: Update context path in web.xml
  replace:
    path: "{{ tomcat_bases }}/{{ tomcat.name }}/webapps/{{ tds_context }}/WEB-INF/web.xml"
    regexp: <param-value>thredds</param-value>
    replace: <param-value>{{ tds_context }}</param-value>

- name: Update tds.properties
  replace:
    path: "{{ tomcat_bases }}/{{ tomcat.name }}/webapps/{{ tds_context }}/WEB-INF/classes/thredds/server/tds.properties"
    regexp: tds.content.path=thredds
    replace: tds.content.path={{ tds_content_path }}

- name: Add tds.content.root.path to tomcat
  lineinfile:
    path: "{{ tomcat_bases }}/{{ tomcat.name }}/bin/setenv.sh"
    insertbefore: BOF
    line: export CONTENT_ROOT="-Dtds.content.root.path={{ tds_content_root_path }}"

- name: Configure TDS authorizer useSSL
  replace:
    path: "{{ tomcat_bases }}/{{ tomcat.name }}/webapps/{{ tds_context }}/WEB-INF/applicationContext.xml"
    regexp: <property name="useSSL" value=".*"/>
    replace: <property name="useSSL" value="{{ tds_useSSL }}"/>

- name: Configure TDS authorizer sslPort
  replace:
    path: "{{ tomcat_bases }}/{{ tomcat.name }}/webapps/{{ tds_context }}/WEB-INF/applicationContext.xml"
    regexp: <property name="sslPort" value=".*"/>
    replace: <property name="sslPort" value="{{ tds_sslPort }}"/>